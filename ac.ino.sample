#include <WiFi.h>
#include <HTTPClient.h>

const char* ssid = "";
const char* password = "";
const char* webhook = "";
int thresholdRatio = 0.3;

int sensorPin = A0;

void setup() {
    Serial.begin(115200);
    pinMode(sensorPin, INPUT);
    // If you want, trigger "start up" event here.
}

// Current is relative value, absolute value is not actual A.
int lastCurrent = 0;

// Check current for every 5 seconds and notify if t decreases more than threshold ratio.
void loop() {
    int current = measureCurrent();
    Serial.printf("Current %d\n", current);
    if (lastCurrent > 0 && current <= lastCurrent * thresholdRatio) {
        Serial.println("TRIGGER");
        triggerCurrentLow();
    }
    lastCurrent = current;
    delay(5000);
}

int measureCurrent() {
    int result;
    int readValue;             //value read from the sensor
    int maxValue = 0;          // store max value here
    uint32_t start_time = millis();
    while((millis()-start_time) < 1000) //sample for 1 sec
    {
        readValue = analogRead(sensorPin);
        if (readValue > maxValue) {
            maxValue = readValue;
        }
    }

    return maxValue;
}


void triggerCurrentLow() {
    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("Connecting to WiFi..");
    }

    Serial.println("Connected to the WiFi network");

    HTTPClient http;

    http.begin(webhook);
    int httpCode = http.GET();

    if (httpCode > 0) {

        String payload = http.getString();
        Serial.println(httpCode);
        Serial.println(payload);
    }

    else {
        Serial.println("Error on HTTP request");
    }

    http.end(); //Free the resources

    WiFi.disconnect();
}
